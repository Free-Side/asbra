/*---
layout: master.hbs
title: ASBRA - Annual Point Series
subtitle: Point Series
description: The Official Website of ASBRA, the Aloha State Bicycle Racing Association.
activePage: point-series
head: |
  <link href="/style/index.css" rel="stylesheet" type="text/css" />
  <link href="/style/point-series.css" rel="stylesheet" type="text/css" />
  <script src="/js/d3.min.js"></script>
---*/

<section id="overview">
  <h1>Overview</h1>

  <p>
    Beginning this year we are bringing back an old tradition with a new twist: the Best All 'Round Point Series.
  </p>
  <p>
    For each participating event<sup><a href="#participating_events">*</a></sup> that racers compete in, they will be
    awarded points based on finishing order within their <strong>race category</strong> (see table below). Note that all
    riders who <strong>start</strong> are given at least one point. At the end of the year we will tally up the points
    all riders based on their <strong>age group</strong>, and award prizes to the top point scorers. <em>The more you
    race, the better your chances!</em> In addition to the prizes, all participants will receive 2023 race season
    T-Shirt and possibly other <abbr about="Stuff We All Get">SWAG</abbr> (assuming you respond to our end of season
    survey with your T-shirt size and attend our end of season gathering, or provide a mailing address).
  </p>
  <p>
    Questions? Contact <a href="mailto:paul@asbra.org">Paul Wheeler</a>.
  </p>

  <section id="categories">
    <h2>Categories</h2>
    <p>While points in each race are based on finishing order in the race category entered. The end-of year rankings are
      based on a standardized set of categories:</p>
    <table>
      <tbody>
      {{#each categories }}
        <tr>
          <td>{{name}}</td>
        </tr>
      {{/each}}
      </tbody>
    </table>
  </section>

  <section id="points_allotment">
    <h2>Points Allotment</h2>

    <table>
      <thead>
      <tr>
        <td>Place</td>
        <td>Points</td>
      </tr>
      </thead>
      <tbody>
      <tr>
        <td>1st</td>
        <td>13</td>
      </tr>
      <tr>
        <td>2nd</td>
        <td>8</td>
      </tr>
      <tr>
        <td>3rd</td>
        <td>5</td>
      </tr>
      <tr>
        <td>4th</td>
        <td>3</td>
      </tr>
      <tr>
        <td>5th</td>
        <td>2</td>
      </tr>
      <tr>
        <td>6th or lower</td>
        <td>1</td>
      </tr>
      </tbody>
    </table>
  </section>

  <section id="participating_events">
    <h2>Participating Events</h2>
    <ul>
      <li>Makaha TT</li>
      <li>Pineapple Sprint</li>
      <li>Castle to Hanauma Bay TT</li>
      <li>Tantalus TT</li>
      <li>Kualoa Team TT</li>
      <li>Malaekahana TT</li>
      <li>Pineapple Hill Road Race</li>
      <li>Kapolei Criterium Series</li>
      <li>Olomana Road Race</li>
      <li>Dick Evans Memorial Road Race</li>
    </ul>
    <p>More events, including some inter-island races, may still be added once we can confirm with the race
      directors.</p>
  </section>
</section>

<section id="sponsors">
  <h1>Sponsors</h1>

  <div class="friend-logos">
    {{#each sponsors}}
      <a href="{{link}}" class="friend-link" target="_blank">
        <figure class="friend-tile">
          <div>
            <img src="{{logo}}" width="{{logoWidth}}" height="{{logoHeight}}" alt="{{name}}" />
          </div>
          <figcaption>{{name}}</figcaption>
        </figure>
      </a>
    {{/each}}
  </div>
</section>

<section id="standings">
  <h1>Standings</h1>

  <details class="results overall-results">
    <summary>Overall - Women</summary>

    <table>
      <tbody>
      {{#sorted-each ($filter-by seriesPoints "Gender" "Female") "Points_Total" "desc" "Race_Age" "desc" "Gender" "asc"}}
        <tr>
          <td>{{Full_Name}}</td>
          <td>{{Points_Total}}</td>
        </tr>
      {{/sorted-each}}
      </tbody>
    </table>
  </details>

  <details class="results overall-results">
    <summary>Overall - Men</summary>

    <table>
      <tbody>
      {{#sorted-each ($filter-by seriesPoints "Gender" "Male") "Points_Total" "desc" "Race_Age" "desc" "Gender" "asc"}}
        <tr>
          <td>{{Full_Name}}</td>
          <td>{{Points_Total}}</td>
        </tr>
      {{/sorted-each}}
      </tbody>
    </table>
  </details>

  <script>
    const eventInfo = {
      {{#each events }}
      '{{name}}': {
        date: new Date('{{date}}')
      },
      {{/each}}
    };
  </script>
  {{#each categories}}
    {{#if ($not-empty ($filter-by ../seriesPoints "Series_Category" name ))}}
      <details class="results category-results">
        <summary>{{name}}</summary>

        <table>
          <tbody>
          {{#sorted-each ($filter-by ../seriesPoints "Series_Category" name ) "Points_Total" "desc"}}

            <tr>
              <td>{{Full_Name}}</td>
              <td>{{Points_Total}}</td>
            </tr>
          {{/sorted-each}}
          </tbody>
        </table>

        <div id="{{ $replaceAll ($replaceAll ($replaceAll name "(" "") ")" "") " " "_"}}_chart" class="points-chart"></div>

        <script>
          (function makeChart() {
            const participants = [
              {{#each ($filter-by ../seriesPoints "Series_Category" name )}}
                {
                  name: '{{Full_Name}}',
                  totalPoints: {{Points_Total}},
                  results: [
                    {{#each ../../events }}
                      {
                        event: '{{name}}',
                        points: {{ $get ../. ($concat ($replaceAll name " " "_") "_Points")}}
                      },
                    {{/each}}
                  ]
                },
              {{/each}}
            ];

            for (const p of participants) {
              const sum = p.results.map(e => e.points).reduce((v1, v2) => v1 + v2);
              if (sum !== p.totalPoints) {
                console.warn(`${p.name}: ${p.totalPoints} ${sum}`)
              }
            }

            const container = d3.select('#{{ $replaceAll ($replaceAll ($replaceAll name "(" "") ")" "") " " "_"}}_chart');

            const dim = {
              width: 640,
              height: 480,
              padding: {
                top: 20,
                right: 20,
                bottom: 20,
                left: 20
              }
            };

            const eventDates = Object.getOwnPropertyNames(eventInfo).map(e => eventInfo[e].date);

            const xAxis =
              d3.scaleTime()
                .domain(d3.extent(eventDates))
                .range([dim.padding.left, dim.width - dim.padding.right]);
            const yAxis =
              d3.scaleLinear()
                .domain([0, Math.max(...participants.map(p => p.totalPoints))])
                .range([dim.height - dim.padding.bottom, dim.padding.top]);

            const svg = container.append('svg')
              .attr('width', dim.width)
              .attr('height', dim.height);

            const tooltip = container
              .append('div')
              .style('display', 'none')
              .attr('class', 'tooltip');

            // Add the x-axis.
            svg.append('g')
              .attr('transform', `translate(0,${dim.height - dim.padding.bottom})`)
              .call(d3.axisBottom(xAxis));

            // Add the y-axis.
            svg.append('g')
              .attr('transform', `translate(${dim.padding.left},0)`)
              .call(d3.axisLeft(yAxis));

            function mouseover(e, c) {
              tooltip.style('display', 'block');
              d3.select(this)
                .style('stroke', c);
            }
            function mousemove(e, p, d) {
              const [x, y] = d3.pointer(e);
              tooltip
                .html(d?.event ? `${p.name}<br />${d.event}: ${d.points}` : p.name)
                .style('left', `${x}px`)
                .style('top', `${y}px`);
            }
            function mouseleave() {
              tooltip.style('display', 'none');
              d3.select(this)
                .style('stroke', 'transparent');
            }

            let nextColor = 1;
            function selectColor() {
              const hue = nextColor++ * 137.508;
              return [`hsl(${hue},60%,35%)`, `hsla(${hue},60%,35%,50%)`];
            }
            for (const p of participants) {
              // Update results with cumulative sum
              let s = 0;
              for (const e of p.results) {
                e.date = eventInfo[e.event].date;
              }
              p.results.sort((e1, e2) => e1.date < e2.date ? -1 : (e1.date > e2.date ? 1 : 0));
              for (const e of p.results) {
                e.sum = s = s + e.points;
              }
              const [solid, translucent] = selectColor();
              svg.append('path')
                .datum(p.results)
                .attr('d', d3.line().x(d => xAxis(d.date)).y(d => yAxis(d.sum)))
                .attr('stroke', solid)
                .attr('fill', 'none')
                .attr('stroke-width', 1.5);
              svg.append('path')
                .datum(p.results)
                .attr('d', d3.line().x(d => xAxis(d.date)).y(d => yAxis(d.sum)))
                .attr('stroke', 'transparent')
                .attr('fill', 'none')
                .attr('stroke-width', 4)
                .on("mouseover", function (e) { mouseover.call(this, e, translucent) })
                .on("mousemove", function (e, d) { mousemove.call(this, e, p, d) })
                .on("mouseleave", function (e) { mouseleave.call(this, e, 'transparent') });
            }
            for (const p of participants) {
              svg.append('g')
                .selectAll('dot')
                .data(p.results)
                .enter()
                .append('circle')
                .attr('cx', d => xAxis(d.date))
                .attr('cy', d => yAxis(d.sum))
                .attr('r', 3)
                .attr('fill', 'rgba(20, 20, 20, 60%)')
                .on("mouseover", function (e) { mouseover.call(this, e, 'black') })
                .on("mousemove", function (e, d) { mousemove.call(this, e, p, d) })
                .on("mouseleave", function (e) { mouseleave.call(this, e, 'rgba(20, 20, 20, 60%)') });
            }

          })();
        </script>
        <div style="clear: both;"></div>
      </details>
    {{/if}}
  {{/each}}
</section>

<section id="event_results">
  <h1>Event Results</h1>

  {{#each events }}
    <details class="results">
      <summary>{{name}}</summary>

      {{#with ($get ../seriesEventResults name)}}

      <table>
        <tbody>
        {{#each ($group-by results "Category") }}
          <tr class="result-category-header table-header">
            <td colspan="3">{{key}}</td>
          </tr>
          {{#sorted-each values "Place" "num_asc"}}
            <tr>
              <td>{{Place}}</td>
              <td>{{Full_Name}}</td>
              <td>{{Points}}</td>
            </tr>
          {{/sorted-each}}
        {{/each}}
        </tbody>
      </table>
      {{/with}}
    </details>
  {{/each}}
</section>
